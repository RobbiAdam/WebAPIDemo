// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPIDemo.Data;

#nullable disable

namespace WebAPIDemo.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240227140715_AddDescriptionToCar")]
    partial class AddDescriptionToCar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPIDemo.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("CarBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CarPrice")
                        .HasColumnType("float");

                    b.Property<int?>("CarSeat")
                        .HasColumnType("int");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            CarBrand = "Toyota",
                            CarColor = "Silver",
                            CarName = "Camry",
                            CarPrice = 25000.0,
                            CarSeat = 4,
                            CarType = "Sedan"
                        },
                        new
                        {
                            CarId = 2,
                            CarBrand = "Honda",
                            CarColor = "Red",
                            CarName = "Civic",
                            CarPrice = 23000.0,
                            CarSeat = 4,
                            CarType = "Sedan"
                        },
                        new
                        {
                            CarId = 3,
                            CarBrand = "Ford",
                            CarColor = "Blue",
                            CarName = "F-150",
                            CarPrice = 35000.0,
                            CarSeat = 2,
                            CarType = "Sport"
                        },
                        new
                        {
                            CarId = 4,
                            CarBrand = "Chevrolet",
                            CarColor = "Black",
                            CarName = "Camaro",
                            CarPrice = 45000.0,
                            CarSeat = 2,
                            CarType = "Sport"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
